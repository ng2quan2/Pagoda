@model Pagoda.Models.Buddhist

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <hr />

    <fieldset id="test">
        <div class="form-group">
            <div class="row">
                <div class="col-md-10">
                    <div class="text-bold mb-2">Họ Tên</div>
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Xin Mời Nhập Họ Tên" }, @name = "FullName"})
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <div class="text-bold mb-2">Năm Sinh</div>
                    @Html.EditorFor(model => model.YearUser, new { htmlAttributes = new { @class = "form-control", placeholder = "................" } })
                    @Html.ValidationMessageFor(model => model.YearUser, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <div class="text-bold mb-2">Pháp Danh</div>
                    @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control", placeholder = "Xin Mời Nhập Pháp Danh" } })
                    @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <div class="text-bold mb-2">Số Điện Thoại</div>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Xin Mời Nhập Số Điện Thoại" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <div class="text-bold mb-2">Giới Tính</div>

                    @Html.DropDownListFor(model => model.Sex, new SelectList(new[] { new { Value = true, Text = "Nam" }, new { Value = false, Text = "Nữ" } }, "Value", "Text"), "Chọn Giới Tính", new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <div class="text-bold mb-2">Quy Y</div>
                    @Html.DropDownListFor(model => model.Status, new SelectList(new[] { new { Value = true, Text = "Tại Gia" }, new { Value = false, Text = "Tại Chùa" } }, "Value", "Text"), "Chọn Trạng Thái", new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @Html.EditorFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control d-none", placeholder = "Xin Mời Nhập Nhóm Người Dùng", @Value = 2 } })
                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    <div class="text-bold mb-2">Địa Chỉ</div>
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Xin Mời Nhập Địa Chỉ" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </fieldset>

    <hr />
}

<div class="form-group mt-2">
    <div class="col-md-offset-2 col-md-10 text-right" style="margin-left: 114px;">
        <input type="button" value="Lưu" onclick="SaveBuddhist()" class="btn btn-danger" />
    </div>
</div>

<link href="@Url.Content("~/Content/Clients/plugins/jquery-ui/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/Clients/plugins/jquery-ui/jquery-ui.min.js")" type="text/javascript"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#test').validate({
            rules: {
                'FullName': {
                    required: true
                },
                'Phone': {
                    required: true
                }
            },
            messages: {
                'FullName': 'Xin vui lòng nhập tên của bạn',
                'Phone': 'Xin vui lòng nhập số điện thoại'
            }
        });
    });

    function SaveBuddhist() {
        var FullName = $("#FullName").val();
        var NickName = $("#NickName").val();
        var YearUser = $("#YearUser").val();
        var Phone = $("#Phone").val();
        var Sex = $("#Sex").val();
        var Address = $("#Address").val();
        var Status = $("#Status").val();
        var RoleID = $("#RoleID").val();

        var Buddhist = {
            "FullName": FullName, "YearUser": YearUser, "NickName": NickName, "Phone": Phone,
            "Sex": Sex, "Address": Address, "Status": Status, "RoleID": RoleID
        };

        $.post("/Buddhist/Create", Buddhist,
            function (data) {
                if (data.success) {
                    //window.location.href = "/Buddhist/Index";
                    location.reload();
                } else {
                    alert(data.message);
                }
            }, 'json');
    }
</script>
