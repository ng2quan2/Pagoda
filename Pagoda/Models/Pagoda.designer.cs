#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pagoda.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Pagoda")]
	public partial class PagodaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuddhist(Buddhist instance);
    partial void UpdateBuddhist(Buddhist instance);
    partial void DeleteBuddhist(Buddhist instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertDetailFamily(DetailFamily instance);
    partial void UpdateDetailFamily(DetailFamily instance);
    partial void DeleteDetailFamily(DetailFamily instance);
    partial void InsertDonation(Donation instance);
    partial void UpdateDonation(Donation instance);
    partial void DeleteDonation(Donation instance);
    partial void InsertFamily(Family instance);
    partial void UpdateFamily(Family instance);
    partial void DeleteFamily(Family instance);
    partial void InsertMonk(Monk instance);
    partial void UpdateMonk(Monk instance);
    partial void DeleteMonk(Monk instance);
    partial void InsertPrayFamily(PrayFamily instance);
    partial void UpdatePrayFamily(PrayFamily instance);
    partial void DeletePrayFamily(PrayFamily instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertStar(Star instance);
    partial void UpdateStar(Star instance);
    partial void DeleteStar(Star instance);
    partial void InsertThreat(Threat instance);
    partial void UpdateThreat(Threat instance);
    partial void DeleteThreat(Threat instance);
    #endregion
		
		public PagodaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PagodaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PagodaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PagodaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Buddhist> Buddhists
		{
			get
			{
				return this.GetTable<Buddhist>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<DetailFamily> DetailFamilies
		{
			get
			{
				return this.GetTable<DetailFamily>();
			}
		}
		
		public System.Data.Linq.Table<Donation> Donations
		{
			get
			{
				return this.GetTable<Donation>();
			}
		}
		
		public System.Data.Linq.Table<Family> Families
		{
			get
			{
				return this.GetTable<Family>();
			}
		}
		
		public System.Data.Linq.Table<Monk> Monks
		{
			get
			{
				return this.GetTable<Monk>();
			}
		}
		
		public System.Data.Linq.Table<PrayFamily> PrayFamilies
		{
			get
			{
				return this.GetTable<PrayFamily>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Star> Stars
		{
			get
			{
				return this.GetTable<Star>();
			}
		}
		
		public System.Data.Linq.Table<Threat> Threats
		{
			get
			{
				return this.GetTable<Threat>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buddhist")]
	public partial class Buddhist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuddhistID;
		
		private string _FullName;
		
		private string _NickName;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<bool> _Sex;
		
		private string _Phone;
		
		private string _Address;
		
		private System.Nullable<int> _StarID;
		
		private System.Nullable<int> _ThreatID;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<bool> _Status;
		
		private string _Password;
		
		private System.Nullable<int> _YearUser;
		
		private string _DisplayName;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Star> _Star;
		
		private EntityRef<Threat> _Threat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuddhistIDChanging(int value);
    partial void OnBuddhistIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStarIDChanging(System.Nullable<int> value);
    partial void OnStarIDChanged();
    partial void OnThreatIDChanging(System.Nullable<int> value);
    partial void OnThreatIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnYearUserChanging(System.Nullable<int> value);
    partial void OnYearUserChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public Buddhist()
		{
			this._Role = default(EntityRef<Role>);
			this._Star = default(EntityRef<Star>);
			this._Threat = default(EntityRef<Threat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuddhistID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuddhistID
		{
			get
			{
				return this._BuddhistID;
			}
			set
			{
				if ((this._BuddhistID != value))
				{
					this.OnBuddhistIDChanging(value);
					this.SendPropertyChanging();
					this._BuddhistID = value;
					this.SendPropertyChanged("BuddhistID");
					this.OnBuddhistIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(200)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarID", DbType="Int")]
		public System.Nullable<int> StarID
		{
			get
			{
				return this._StarID;
			}
			set
			{
				if ((this._StarID != value))
				{
					if (this._Star.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStarIDChanging(value);
					this.SendPropertyChanging();
					this._StarID = value;
					this.SendPropertyChanged("StarID");
					this.OnStarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreatID", DbType="Int")]
		public System.Nullable<int> ThreatID
		{
			get
			{
				return this._ThreatID;
			}
			set
			{
				if ((this._ThreatID != value))
				{
					if (this._Threat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreatIDChanging(value);
					this.SendPropertyChanging();
					this._ThreatID = value;
					this.SendPropertyChanged("ThreatID");
					this.OnThreatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearUser", DbType="Int")]
		public System.Nullable<int> YearUser
		{
			get
			{
				return this._YearUser;
			}
			set
			{
				if ((this._YearUser != value))
				{
					this.OnYearUserChanging(value);
					this.SendPropertyChanging();
					this._YearUser = value;
					this.SendPropertyChanged("YearUser");
					this.OnYearUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Buddhist", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Buddhists.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Buddhists.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Star_Buddhist", Storage="_Star", ThisKey="StarID", OtherKey="StarID", IsForeignKey=true)]
		public Star Star
		{
			get
			{
				return this._Star.Entity;
			}
			set
			{
				Star previousValue = this._Star.Entity;
				if (((previousValue != value) 
							|| (this._Star.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Star.Entity = null;
						previousValue.Buddhists.Remove(this);
					}
					this._Star.Entity = value;
					if ((value != null))
					{
						value.Buddhists.Add(this);
						this._StarID = value.StarID;
					}
					else
					{
						this._StarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Star");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Threat_Buddhist", Storage="_Threat", ThisKey="ThreatID", OtherKey="ThreatID", IsForeignKey=true)]
		public Threat Threat
		{
			get
			{
				return this._Threat.Entity;
			}
			set
			{
				Threat previousValue = this._Threat.Entity;
				if (((previousValue != value) 
							|| (this._Threat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Threat.Entity = null;
						previousValue.Buddhists.Remove(this);
					}
					this._Threat.Entity = value;
					if ((value != null))
					{
						value.Buddhists.Add(this);
						this._ThreatID = value.ThreatID;
					}
					else
					{
						this._ThreatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Threat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginID;
		
		private System.Nullable<int> _RoleID;
		
		private string _UserPhone;
		
		private string _Password;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(int value);
    partial void OnLoginIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserPhoneChanging(string value);
    partial void OnUserPhoneChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public UserLogin()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPhone", DbType="VarChar(10)")]
		public string UserPhone
		{
			get
			{
				return this._UserPhone;
			}
			set
			{
				if ((this._UserPhone != value))
				{
					this.OnUserPhoneChanging(value);
					this.SendPropertyChanging();
					this._UserPhone = value;
					this.SendPropertyChanged("UserPhone");
					this.OnUserPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserLogin", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserLogins.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserLogins.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailFamily")]
	public partial class DetailFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailFamilyID;
		
		private string _FullName;
		
		private System.Nullable<int> _FamilyID;
		
		private System.Nullable<bool> _Sex;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _StarID;
		
		private System.Nullable<int> _ThreatID;
		
		private EntityRef<Family> _Family;
		
		private EntityRef<Star> _Star;
		
		private EntityRef<Threat> _Threat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailFamilyIDChanging(int value);
    partial void OnDetailFamilyIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnFamilyIDChanging(System.Nullable<int> value);
    partial void OnFamilyIDChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnStarIDChanging(System.Nullable<int> value);
    partial void OnStarIDChanged();
    partial void OnThreatIDChanging(System.Nullable<int> value);
    partial void OnThreatIDChanged();
    #endregion
		
		public DetailFamily()
		{
			this._Family = default(EntityRef<Family>);
			this._Star = default(EntityRef<Star>);
			this._Threat = default(EntityRef<Threat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailFamilyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailFamilyID
		{
			get
			{
				return this._DetailFamilyID;
			}
			set
			{
				if ((this._DetailFamilyID != value))
				{
					this.OnDetailFamilyIDChanging(value);
					this.SendPropertyChanging();
					this._DetailFamilyID = value;
					this.SendPropertyChanged("DetailFamilyID");
					this.OnDetailFamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyID", DbType="Int")]
		public System.Nullable<int> FamilyID
		{
			get
			{
				return this._FamilyID;
			}
			set
			{
				if ((this._FamilyID != value))
				{
					if (this._Family.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyIDChanging(value);
					this.SendPropertyChanging();
					this._FamilyID = value;
					this.SendPropertyChanged("FamilyID");
					this.OnFamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarID", DbType="Int")]
		public System.Nullable<int> StarID
		{
			get
			{
				return this._StarID;
			}
			set
			{
				if ((this._StarID != value))
				{
					if (this._Star.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStarIDChanging(value);
					this.SendPropertyChanging();
					this._StarID = value;
					this.SendPropertyChanged("StarID");
					this.OnStarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreatID", DbType="Int")]
		public System.Nullable<int> ThreatID
		{
			get
			{
				return this._ThreatID;
			}
			set
			{
				if ((this._ThreatID != value))
				{
					if (this._Threat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreatIDChanging(value);
					this.SendPropertyChanging();
					this._ThreatID = value;
					this.SendPropertyChanged("ThreatID");
					this.OnThreatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_DetailFamily", Storage="_Family", ThisKey="FamilyID", OtherKey="FamilyID", IsForeignKey=true)]
		public Family Family
		{
			get
			{
				return this._Family.Entity;
			}
			set
			{
				Family previousValue = this._Family.Entity;
				if (((previousValue != value) 
							|| (this._Family.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Family.Entity = null;
						previousValue.DetailFamilies.Remove(this);
					}
					this._Family.Entity = value;
					if ((value != null))
					{
						value.DetailFamilies.Add(this);
						this._FamilyID = value.FamilyID;
					}
					else
					{
						this._FamilyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Family");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Star_DetailFamily", Storage="_Star", ThisKey="StarID", OtherKey="StarID", IsForeignKey=true)]
		public Star Star
		{
			get
			{
				return this._Star.Entity;
			}
			set
			{
				Star previousValue = this._Star.Entity;
				if (((previousValue != value) 
							|| (this._Star.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Star.Entity = null;
						previousValue.DetailFamilies.Remove(this);
					}
					this._Star.Entity = value;
					if ((value != null))
					{
						value.DetailFamilies.Add(this);
						this._StarID = value.StarID;
					}
					else
					{
						this._StarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Star");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Threat_DetailFamily", Storage="_Threat", ThisKey="ThreatID", OtherKey="ThreatID", IsForeignKey=true)]
		public Threat Threat
		{
			get
			{
				return this._Threat.Entity;
			}
			set
			{
				Threat previousValue = this._Threat.Entity;
				if (((previousValue != value) 
							|| (this._Threat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Threat.Entity = null;
						previousValue.DetailFamilies.Remove(this);
					}
					this._Threat.Entity = value;
					if ((value != null))
					{
						value.DetailFamilies.Add(this);
						this._ThreatID = value.ThreatID;
					}
					else
					{
						this._ThreatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Threat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donation")]
	public partial class Donation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonationID;
		
		private string _FullName;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _YearUser;
		
		private string _Address;
		
		private System.Nullable<int> _Asset;
		
		private string _Thing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonationIDChanging(int value);
    partial void OnDonationIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnYearUserChanging(System.Nullable<int> value);
    partial void OnYearUserChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAssetChanging(System.Nullable<int> value);
    partial void OnAssetChanged();
    partial void OnThingChanging(string value);
    partial void OnThingChanged();
    #endregion
		
		public Donation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonationID
		{
			get
			{
				return this._DonationID;
			}
			set
			{
				if ((this._DonationID != value))
				{
					this.OnDonationIDChanging(value);
					this.SendPropertyChanging();
					this._DonationID = value;
					this.SendPropertyChanged("DonationID");
					this.OnDonationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearUser", DbType="Int")]
		public System.Nullable<int> YearUser
		{
			get
			{
				return this._YearUser;
			}
			set
			{
				if ((this._YearUser != value))
				{
					this.OnYearUserChanging(value);
					this.SendPropertyChanging();
					this._YearUser = value;
					this.SendPropertyChanged("YearUser");
					this.OnYearUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asset", DbType="Int")]
		public System.Nullable<int> Asset
		{
			get
			{
				return this._Asset;
			}
			set
			{
				if ((this._Asset != value))
				{
					this.OnAssetChanging(value);
					this.SendPropertyChanging();
					this._Asset = value;
					this.SendPropertyChanged("Asset");
					this.OnAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thing", DbType="NVarChar(50)")]
		public string Thing
		{
			get
			{
				return this._Thing;
			}
			set
			{
				if ((this._Thing != value))
				{
					this.OnThingChanging(value);
					this.SendPropertyChanging();
					this._Thing = value;
					this.SendPropertyChanged("Thing");
					this.OnThingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
	public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyID;
		
		private string _FamilyName;
		
		private string _Address;
		
		private EntitySet<DetailFamily> _DetailFamilies;
		
		private EntitySet<PrayFamily> _PrayFamilies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyIDChanging(int value);
    partial void OnFamilyIDChanged();
    partial void OnFamilyNameChanging(string value);
    partial void OnFamilyNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Family()
		{
			this._DetailFamilies = new EntitySet<DetailFamily>(new Action<DetailFamily>(this.attach_DetailFamilies), new Action<DetailFamily>(this.detach_DetailFamilies));
			this._PrayFamilies = new EntitySet<PrayFamily>(new Action<PrayFamily>(this.attach_PrayFamilies), new Action<PrayFamily>(this.detach_PrayFamilies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FamilyID
		{
			get
			{
				return this._FamilyID;
			}
			set
			{
				if ((this._FamilyID != value))
				{
					this.OnFamilyIDChanging(value);
					this.SendPropertyChanging();
					this._FamilyID = value;
					this.SendPropertyChanged("FamilyID");
					this.OnFamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyName", DbType="NVarChar(200)")]
		public string FamilyName
		{
			get
			{
				return this._FamilyName;
			}
			set
			{
				if ((this._FamilyName != value))
				{
					this.OnFamilyNameChanging(value);
					this.SendPropertyChanging();
					this._FamilyName = value;
					this.SendPropertyChanged("FamilyName");
					this.OnFamilyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_DetailFamily", Storage="_DetailFamilies", ThisKey="FamilyID", OtherKey="FamilyID")]
		public EntitySet<DetailFamily> DetailFamilies
		{
			get
			{
				return this._DetailFamilies;
			}
			set
			{
				this._DetailFamilies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_PrayFamily", Storage="_PrayFamilies", ThisKey="FamilyID", OtherKey="FamilyID")]
		public EntitySet<PrayFamily> PrayFamilies
		{
			get
			{
				return this._PrayFamilies;
			}
			set
			{
				this._PrayFamilies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailFamilies(DetailFamily entity)
		{
			this.SendPropertyChanging();
			entity.Family = this;
		}
		
		private void detach_DetailFamilies(DetailFamily entity)
		{
			this.SendPropertyChanging();
			entity.Family = null;
		}
		
		private void attach_PrayFamilies(PrayFamily entity)
		{
			this.SendPropertyChanging();
			entity.Family = this;
		}
		
		private void detach_PrayFamilies(PrayFamily entity)
		{
			this.SendPropertyChanging();
			entity.Family = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Monk")]
	public partial class Monk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MonkID;
		
		private string _FullName;
		
		private string _NickName;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<bool> _Sex;
		
		private string _Phone;
		
		private string _Address;
		
		private System.Nullable<int> _StarID;
		
		private System.Nullable<int> _ThreatID;
		
		private System.Nullable<int> _RoleID;
		
		private string _Password;
		
		private System.Nullable<int> _YearUser;
		
		private string _DisplayName;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Star> _Star;
		
		private EntityRef<Threat> _Threat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonkIDChanging(int value);
    partial void OnMonkIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStarIDChanging(System.Nullable<int> value);
    partial void OnStarIDChanged();
    partial void OnThreatIDChanging(System.Nullable<int> value);
    partial void OnThreatIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnYearUserChanging(System.Nullable<int> value);
    partial void OnYearUserChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public Monk()
		{
			this._Role = default(EntityRef<Role>);
			this._Star = default(EntityRef<Star>);
			this._Threat = default(EntityRef<Threat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MonkID
		{
			get
			{
				return this._MonkID;
			}
			set
			{
				if ((this._MonkID != value))
				{
					this.OnMonkIDChanging(value);
					this.SendPropertyChanging();
					this._MonkID = value;
					this.SendPropertyChanged("MonkID");
					this.OnMonkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(200)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarID", DbType="Int")]
		public System.Nullable<int> StarID
		{
			get
			{
				return this._StarID;
			}
			set
			{
				if ((this._StarID != value))
				{
					if (this._Star.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStarIDChanging(value);
					this.SendPropertyChanging();
					this._StarID = value;
					this.SendPropertyChanged("StarID");
					this.OnStarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreatID", DbType="Int")]
		public System.Nullable<int> ThreatID
		{
			get
			{
				return this._ThreatID;
			}
			set
			{
				if ((this._ThreatID != value))
				{
					if (this._Threat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreatIDChanging(value);
					this.SendPropertyChanging();
					this._ThreatID = value;
					this.SendPropertyChanged("ThreatID");
					this.OnThreatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearUser", DbType="Int")]
		public System.Nullable<int> YearUser
		{
			get
			{
				return this._YearUser;
			}
			set
			{
				if ((this._YearUser != value))
				{
					this.OnYearUserChanging(value);
					this.SendPropertyChanging();
					this._YearUser = value;
					this.SendPropertyChanged("YearUser");
					this.OnYearUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Monk", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Monks.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Monks.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Star_Monk", Storage="_Star", ThisKey="StarID", OtherKey="StarID", IsForeignKey=true)]
		public Star Star
		{
			get
			{
				return this._Star.Entity;
			}
			set
			{
				Star previousValue = this._Star.Entity;
				if (((previousValue != value) 
							|| (this._Star.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Star.Entity = null;
						previousValue.Monks.Remove(this);
					}
					this._Star.Entity = value;
					if ((value != null))
					{
						value.Monks.Add(this);
						this._StarID = value.StarID;
					}
					else
					{
						this._StarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Star");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Threat_Monk", Storage="_Threat", ThisKey="ThreatID", OtherKey="ThreatID", IsForeignKey=true)]
		public Threat Threat
		{
			get
			{
				return this._Threat.Entity;
			}
			set
			{
				Threat previousValue = this._Threat.Entity;
				if (((previousValue != value) 
							|| (this._Threat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Threat.Entity = null;
						previousValue.Monks.Remove(this);
					}
					this._Threat.Entity = value;
					if ((value != null))
					{
						value.Monks.Add(this);
						this._ThreatID = value.ThreatID;
					}
					else
					{
						this._ThreatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Threat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrayFamily")]
	public partial class PrayFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrayFamilyID;
		
		private string _FullName;
		
		private System.Nullable<int> _FamilyID;
		
		private System.Nullable<bool> _Sex;
		
		private System.Nullable<System.DateTime> _DieDate;
		
		private System.Nullable<int> _AgeLived;
		
		private System.Nullable<System.DateTime> _BornDate;
		
		private string _WhereDie;
		
		private string _WhereBorn;
		
		private EntityRef<Family> _Family;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrayFamilyIDChanging(int value);
    partial void OnPrayFamilyIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnFamilyIDChanging(System.Nullable<int> value);
    partial void OnFamilyIDChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnDieDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDieDateChanged();
    partial void OnAgeLivedChanging(System.Nullable<int> value);
    partial void OnAgeLivedChanged();
    partial void OnBornDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBornDateChanged();
    partial void OnWhereDieChanging(string value);
    partial void OnWhereDieChanged();
    partial void OnWhereBornChanging(string value);
    partial void OnWhereBornChanged();
    #endregion
		
		public PrayFamily()
		{
			this._Family = default(EntityRef<Family>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrayFamilyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrayFamilyID
		{
			get
			{
				return this._PrayFamilyID;
			}
			set
			{
				if ((this._PrayFamilyID != value))
				{
					this.OnPrayFamilyIDChanging(value);
					this.SendPropertyChanging();
					this._PrayFamilyID = value;
					this.SendPropertyChanged("PrayFamilyID");
					this.OnPrayFamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyID", DbType="Int")]
		public System.Nullable<int> FamilyID
		{
			get
			{
				return this._FamilyID;
			}
			set
			{
				if ((this._FamilyID != value))
				{
					if (this._Family.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyIDChanging(value);
					this.SendPropertyChanging();
					this._FamilyID = value;
					this.SendPropertyChanged("FamilyID");
					this.OnFamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DieDate
		{
			get
			{
				return this._DieDate;
			}
			set
			{
				if ((this._DieDate != value))
				{
					this.OnDieDateChanging(value);
					this.SendPropertyChanging();
					this._DieDate = value;
					this.SendPropertyChanged("DieDate");
					this.OnDieDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeLived", DbType="Int")]
		public System.Nullable<int> AgeLived
		{
			get
			{
				return this._AgeLived;
			}
			set
			{
				if ((this._AgeLived != value))
				{
					this.OnAgeLivedChanging(value);
					this.SendPropertyChanging();
					this._AgeLived = value;
					this.SendPropertyChanged("AgeLived");
					this.OnAgeLivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BornDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BornDate
		{
			get
			{
				return this._BornDate;
			}
			set
			{
				if ((this._BornDate != value))
				{
					this.OnBornDateChanging(value);
					this.SendPropertyChanging();
					this._BornDate = value;
					this.SendPropertyChanged("BornDate");
					this.OnBornDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhereDie", DbType="NVarChar(200)")]
		public string WhereDie
		{
			get
			{
				return this._WhereDie;
			}
			set
			{
				if ((this._WhereDie != value))
				{
					this.OnWhereDieChanging(value);
					this.SendPropertyChanging();
					this._WhereDie = value;
					this.SendPropertyChanged("WhereDie");
					this.OnWhereDieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhereBorn", DbType="NVarChar(200)")]
		public string WhereBorn
		{
			get
			{
				return this._WhereBorn;
			}
			set
			{
				if ((this._WhereBorn != value))
				{
					this.OnWhereBornChanging(value);
					this.SendPropertyChanging();
					this._WhereBorn = value;
					this.SendPropertyChanged("WhereBorn");
					this.OnWhereBornChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_PrayFamily", Storage="_Family", ThisKey="FamilyID", OtherKey="FamilyID", IsForeignKey=true)]
		public Family Family
		{
			get
			{
				return this._Family.Entity;
			}
			set
			{
				Family previousValue = this._Family.Entity;
				if (((previousValue != value) 
							|| (this._Family.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Family.Entity = null;
						previousValue.PrayFamilies.Remove(this);
					}
					this._Family.Entity = value;
					if ((value != null))
					{
						value.PrayFamilies.Add(this);
						this._FamilyID = value.FamilyID;
					}
					else
					{
						this._FamilyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Family");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<Buddhist> _Buddhists;
		
		private EntitySet<UserLogin> _UserLogins;
		
		private EntitySet<Monk> _Monks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._Buddhists = new EntitySet<Buddhist>(new Action<Buddhist>(this.attach_Buddhists), new Action<Buddhist>(this.detach_Buddhists));
			this._UserLogins = new EntitySet<UserLogin>(new Action<UserLogin>(this.attach_UserLogins), new Action<UserLogin>(this.detach_UserLogins));
			this._Monks = new EntitySet<Monk>(new Action<Monk>(this.attach_Monks), new Action<Monk>(this.detach_Monks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(100)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Buddhist", Storage="_Buddhists", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<Buddhist> Buddhists
		{
			get
			{
				return this._Buddhists;
			}
			set
			{
				this._Buddhists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserLogin", Storage="_UserLogins", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<UserLogin> UserLogins
		{
			get
			{
				return this._UserLogins;
			}
			set
			{
				this._UserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Monk", Storage="_Monks", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<Monk> Monks
		{
			get
			{
				return this._Monks;
			}
			set
			{
				this._Monks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buddhists(Buddhist entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Buddhists(Buddhist entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Monks(Monk entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Monks(Monk entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Star")]
	public partial class Star : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StarID;
		
		private string _StarName;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<bool> _Sex;
		
		private EntitySet<Buddhist> _Buddhists;
		
		private EntitySet<DetailFamily> _DetailFamilies;
		
		private EntitySet<Monk> _Monks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStarIDChanging(int value);
    partial void OnStarIDChanged();
    partial void OnStarNameChanging(string value);
    partial void OnStarNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    #endregion
		
		public Star()
		{
			this._Buddhists = new EntitySet<Buddhist>(new Action<Buddhist>(this.attach_Buddhists), new Action<Buddhist>(this.detach_Buddhists));
			this._DetailFamilies = new EntitySet<DetailFamily>(new Action<DetailFamily>(this.attach_DetailFamilies), new Action<DetailFamily>(this.detach_DetailFamilies));
			this._Monks = new EntitySet<Monk>(new Action<Monk>(this.attach_Monks), new Action<Monk>(this.detach_Monks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StarID
		{
			get
			{
				return this._StarID;
			}
			set
			{
				if ((this._StarID != value))
				{
					this.OnStarIDChanging(value);
					this.SendPropertyChanging();
					this._StarID = value;
					this.SendPropertyChanged("StarID");
					this.OnStarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarName", DbType="NVarChar(200)")]
		public string StarName
		{
			get
			{
				return this._StarName;
			}
			set
			{
				if ((this._StarName != value))
				{
					this.OnStarNameChanging(value);
					this.SendPropertyChanging();
					this._StarName = value;
					this.SendPropertyChanged("StarName");
					this.OnStarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Star_Buddhist", Storage="_Buddhists", ThisKey="StarID", OtherKey="StarID")]
		public EntitySet<Buddhist> Buddhists
		{
			get
			{
				return this._Buddhists;
			}
			set
			{
				this._Buddhists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Star_DetailFamily", Storage="_DetailFamilies", ThisKey="StarID", OtherKey="StarID")]
		public EntitySet<DetailFamily> DetailFamilies
		{
			get
			{
				return this._DetailFamilies;
			}
			set
			{
				this._DetailFamilies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Star_Monk", Storage="_Monks", ThisKey="StarID", OtherKey="StarID")]
		public EntitySet<Monk> Monks
		{
			get
			{
				return this._Monks;
			}
			set
			{
				this._Monks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buddhists(Buddhist entity)
		{
			this.SendPropertyChanging();
			entity.Star = this;
		}
		
		private void detach_Buddhists(Buddhist entity)
		{
			this.SendPropertyChanging();
			entity.Star = null;
		}
		
		private void attach_DetailFamilies(DetailFamily entity)
		{
			this.SendPropertyChanging();
			entity.Star = this;
		}
		
		private void detach_DetailFamilies(DetailFamily entity)
		{
			this.SendPropertyChanging();
			entity.Star = null;
		}
		
		private void attach_Monks(Monk entity)
		{
			this.SendPropertyChanging();
			entity.Star = this;
		}
		
		private void detach_Monks(Monk entity)
		{
			this.SendPropertyChanging();
			entity.Star = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Threat")]
	public partial class Threat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThreatID;
		
		private string _ThreatName;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<bool> _Sex;
		
		private EntitySet<Buddhist> _Buddhists;
		
		private EntitySet<DetailFamily> _DetailFamilies;
		
		private EntitySet<Monk> _Monks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThreatIDChanging(int value);
    partial void OnThreatIDChanged();
    partial void OnThreatNameChanging(string value);
    partial void OnThreatNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    #endregion
		
		public Threat()
		{
			this._Buddhists = new EntitySet<Buddhist>(new Action<Buddhist>(this.attach_Buddhists), new Action<Buddhist>(this.detach_Buddhists));
			this._DetailFamilies = new EntitySet<DetailFamily>(new Action<DetailFamily>(this.attach_DetailFamilies), new Action<DetailFamily>(this.detach_DetailFamilies));
			this._Monks = new EntitySet<Monk>(new Action<Monk>(this.attach_Monks), new Action<Monk>(this.detach_Monks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThreatID
		{
			get
			{
				return this._ThreatID;
			}
			set
			{
				if ((this._ThreatID != value))
				{
					this.OnThreatIDChanging(value);
					this.SendPropertyChanging();
					this._ThreatID = value;
					this.SendPropertyChanged("ThreatID");
					this.OnThreatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreatName", DbType="NVarChar(200)")]
		public string ThreatName
		{
			get
			{
				return this._ThreatName;
			}
			set
			{
				if ((this._ThreatName != value))
				{
					this.OnThreatNameChanging(value);
					this.SendPropertyChanging();
					this._ThreatName = value;
					this.SendPropertyChanged("ThreatName");
					this.OnThreatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Threat_Buddhist", Storage="_Buddhists", ThisKey="ThreatID", OtherKey="ThreatID")]
		public EntitySet<Buddhist> Buddhists
		{
			get
			{
				return this._Buddhists;
			}
			set
			{
				this._Buddhists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Threat_DetailFamily", Storage="_DetailFamilies", ThisKey="ThreatID", OtherKey="ThreatID")]
		public EntitySet<DetailFamily> DetailFamilies
		{
			get
			{
				return this._DetailFamilies;
			}
			set
			{
				this._DetailFamilies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Threat_Monk", Storage="_Monks", ThisKey="ThreatID", OtherKey="ThreatID")]
		public EntitySet<Monk> Monks
		{
			get
			{
				return this._Monks;
			}
			set
			{
				this._Monks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buddhists(Buddhist entity)
		{
			this.SendPropertyChanging();
			entity.Threat = this;
		}
		
		private void detach_Buddhists(Buddhist entity)
		{
			this.SendPropertyChanging();
			entity.Threat = null;
		}
		
		private void attach_DetailFamilies(DetailFamily entity)
		{
			this.SendPropertyChanging();
			entity.Threat = this;
		}
		
		private void detach_DetailFamilies(DetailFamily entity)
		{
			this.SendPropertyChanging();
			entity.Threat = null;
		}
		
		private void attach_Monks(Monk entity)
		{
			this.SendPropertyChanging();
			entity.Threat = this;
		}
		
		private void detach_Monks(Monk entity)
		{
			this.SendPropertyChanging();
			entity.Threat = null;
		}
	}
}
#pragma warning restore 1591
